@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@using Umbraco.Cms.Core.Models.PublishedContent
@using Umbraco.Cms.Core.PublishedCache
@using Umbraco.Cms.Core.Routing
@using Umbraco.Cms.Core.Services.Navigation

@inject IVariationContextAccessor VariationContextAccessor
@inject IPublishedContentCache PublishedContentCache
@inject IDocumentNavigationQueryService DocumentNavigationQueryService
@inject IPublishedValueFallback PublishedValueFallback
@inject IPublishedUrlProvider PublishedUrlProvider

@{
    var rootContent = Umbraco.ContentAtRoot();
    var siteSettings = rootContent.OfType<SiteSettings>().FirstOrDefault();

    var siteLogo = siteSettings?.SiteLogo;
    var siteName = siteSettings?.SiteName ?? "No site name";

    var selection = Model.Root().Children().Where(x => x.IsVisible(PublishedValueFallback)).ToArray();
}

<div class="grid col-3-center align-center py-sm">
    @if (siteLogo != null)
    {
        <a class="mr-auto" href="/"><img src="@siteLogo.Url()" alt="@siteName" /></a>
    }
    else
    {
        <a class="mr-auto" href="/">@siteName</a>
    }
    <nav>
        @if (selection?.Length > 0)
        {
            <ul class="flex align-center gap-lg">
                @foreach (var item in selection)
                {
                    <li class="@(item.IsAncestorOrSelf(Model) ? "current" : null)">
                        <a class="clr-primary text-bold effect-secondary" href="@item.Url(PublishedUrlProvider)">@item.Name</a>
                    </li>
                }
            </ul>
        }
    </nav>
    <button class="ml-auto"><i class="fa-solid fa-magnifying-glass clr-primary effect-secondary"></i></button>
</div>
